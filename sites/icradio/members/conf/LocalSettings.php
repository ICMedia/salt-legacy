<?php
error_reporting( E_ALL );
ini_set( 'display_errors', 1 );

# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

# If PHP's memory limit is very low, some operations may fail.
#ini_set( 'memory_limit', '20M' );
ini_set( 'memory_limit', '256M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename         = "IC Radio Members Area Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/members/wiki";
$wgScriptExtension  = ".php";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "it@icradio.com";
$wgPasswordSender = "it@icradio.com";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "{{ salt['pillar.get']('icradio:wiki_db:host') }}";
$wgDBuser           = "{{ salt['pillar.get']('icradio:wiki_db:user') }}";
$wgDBpassword       = "{{ salt['pillar.get']('icradio:wiki_db:password') }}";
$wgDBname           = "{{ salt['pillar.get']('icradio:wiki_db:database') }}";

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = true;

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = false;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

$wgLocalInterwiki   = strtolower( $wgSitename );

$wgLanguageCode = "en";

$wgSecretKey = "{{ salt['pillar.get']('icradio:wiki:secret') }}";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
$wgDefaultSkin = 'monobook';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
# $wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";
# $wgRightsCode = ""; # Not yet used

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );

# This snippet prevents new registrations from anonymous users
$wgGroupPermissions['*']['createaccount'] = false;

# Disable reading line, for anonymous (not-logged-in => * ) :
$wgGroupPermissions['*']['read'] = false;
function efLoginFormMessage( &$template ) {
        $template->set( 'header', "(If you would like to join this wiki for ICRadio, you need to ask a current administrator. Try emailing the technical manager at technical@icradio.com )");
        return true;
}
$wgHooks['UserLoginForm'][]='efLoginFormMessage';

# Its ok for anyone to view the main page
$wgWhitelistRead = array("Main Page");

$wgLogo = '/img/logo_small.jpg';

$wgEnableUploads = true; # Enable uploads
$wgFileExtensions = array_merge($wgFileExtensions, array('conf'));
$wgSVGConverter = 'ImageMagick';
$wgCheckFileExtensions = false;

#Infobox
require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );


#Syntax Highlighting Plugin
require_once("$IP/extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php");

require_once( "$IP/extensions/Userstuff/UserAdmin.php" );

require_once( "$IP/extensions/Ldap/LdapAuthentication.php" );
$wgAuth = new LdapAuthenticationPlugin();
$wgLDAPDomainNames = array(
  "Imperial College");
$wgLDAPServerNames = array(
  "Imperial College"=>"unixldap.cc.ic.ac.uk");
$wgLDAPUseLocal = false;
$wgLDAPEncryptionType = array(
  "Imperial College"=>"clear");
$wgLDAPOptions = array(
  "Imperial College"=>array( LDAP_OPT_PROTOCOL_VERSION, 3 ));
$wgLDAPSearchStrings = array(
 "Imperial College"=>"uid=USER-NAME,ou=People,ou=everyone,dc=ic,dc=ac,dc=uk");
$wgLDAPDisableAutoCreate = array(
  "Imperial College"=>false
  );
$wgLDAPDebug = 0;
$wgDebugLogGroups["ldap"] = "config/debug.log" ;

$wgGroupPermissions['*']['createaccount'] = false;
$wgBlockDisablesLogin = true;

